((delta () () (() R)))
((delta () () (() L)))

((halla-derecha x)
    (delta x1 x2 (x3|(R)))
    (NOT EQ x3 ())
    (DELCL ((delta x1 x2 (x3|(R)))))
    (halla-derecha x4)
    (union (x3) x4 x)
)
((halla-derecha ()))

((halla-izquierda x)
    (delta x1 x2 (x3|(L)))
    (NOT EQ x3 ())
    (DELCL ((delta x1 x2 (x3|(L)))))
    (halla-izquierda x4)
    (union (x3) x4 x)
)
((halla-izquierda ()))

((enlista (x1|x2)  y)
    (union ((x1)) () y1)
    (enlista x2 y2)
    (union y1 y2 y)
)
((enlista () ()))

((halla-F-prima (x1|x2) y)
    (F z)
    (interseccion x1 z x)
    (union x () y1)
    (halla-F-prima x2 y2)
    (union y1 y2 y)
)
((halla-F-prima (x1|x2) y)
    (halla-F-prima x2 y)
)
((halla-F-prima () ()))

((ejem)
    (halla-derecha x)
    (halla-izquierda y)
    (enlista x z)
    (halla-F-prima z z1)
    (ADDCL ((F-prima z1)))
    (PP Se mueven a la derecha los estados x)
    (PP Se mueven a la izquierda los estados y)
    (PP La lista auxiliar es z)
    (PP Los estados de F prima son z1)
)