?((/* --------------------------------------------------------------------- ))
?((/*   Programa AFD2REG.LOG para obtener la expresi¢n regular equivalente  ))
?((/*                           a un AFD dado.                              ))
?((/*   Realizado por: Rodolfo Gonz lez Gonz lez.                           ))
?((/* --------------------------------------------------------------------- ))

?((/* carga archivo con rutinas generales para el manejo de listas          ))

?((LOAD listas))

?((/* --------------------------------------------------------------------- ))
?((/* El archivo deltas.log debe estar en el directorio de actual y debe    ))
?((/* contener a M, es decir el AFD a procesar.El contenido de este archivo ))
?((/* debe ser dado por el usuario.                                         ))
?((/* --------------------------------------------------------------------- ))

?((LOAD deltas))

?((/* --------------------------------------------------------------------- ))
?((/* Mas rutinas para el manejo de listas                                  ))
?((/* --------------------------------------------------------------------- ))

((quita-frente (x1|x2) x2))
((quita-frente () ()))

((invierte () ()))
((invierte (x1|x2) y)
    (append () (x1) y1)
    (invierte x2 y2)
    (append y2 y1 y)
)

?((/* --------------------------------------------------------------------- ))
?((/* Clausulas para obtener la expresi¢n regular correspondiente a r con   ))
?((/* k=0.                                                                  ))
?((/* x1 = qi, y1 = qj, z = expr. reg. obtenida.                            ))
?((/* --------------------------------------------------------------------- ))

((r0 x1 y1 z)
    (delta x1 z1 y1)
    (DELCL ((delta x1 z1 y1)))
    (append (z1) (+) z3)
    (r0 x1 y1 z2)
    (append z3 z2 z)
)

((r0 x1 y1 z)
   (union () () z))

?((/* --------------------------------------------------------------------- ))

((rk0 x1 y1 z)
    (NOT EQ x1 y1)
    (r0 x1 y1 z1)
    (NOT EQ z1 ())
    (invierte z1 z2)
    (quita-frente z2 z3)
    (invierte z3 z)
    (KILL delta)
    (KILL sigma)
    (KILL Q)
    (KILL F)
    (KILL indice)
    (LOAD deltas)
)

((rk0 x1 y1 z)
    (NOT EQ x1 y1)
    (r0 x1 y1 z1)
    (EQ z1 ())
    (union () (-) z)
    (KILL delta)
    (KILL sigma)
    (KILL Q)
    (KILL F)
    (KILL indice)
    (LOAD deltas)
)

((rk0 x1 y1 z)
    (EQ x1 y1)
    (r0 x1 y1 z1)
    (append z1 (()) z2)
    (invierte z2 z)
    (KILL delta)
    (KILL sigma)
    (KILL Q)
    (KILL F)
    (KILL indice)
    (LOAD deltas)
)

?((/* --------------------------------------------------------------------- ))
?((/* Clausulas para obtener la expresi¢n regular r con k>0.                ))
?((/* x1 = k, y1 = i, y2 = j, z = expr. reg. para k>0                       ))
?((/* --------------------------------------------------------------------- ))

((rk x1 y1 y2 z)
    (EQ x1 0)
    (indice y10 y1)
    (indice y20 y2)
    (rk0 y10 y20 z)
)

((rk x1 y1 y2 (z))
    (NOT EQ x1 0)
    (SUM x10 1 x1)
    (rk x10 y1 x1 z1)
    (rk x10 x1 x1 z2)
    (rk x10 x1 y2 z3)
    (rk x10 y1 y2 z4)
    (append z1 (.) z5)
    (append z5 (z2) z6)
    (append z6 (*) z7)
    (append z7 (.) z8)
    (append z8 z3 z9)
    (append z9 (+) z10)
    (append z10 z4 z)
)

?((/* --------------------------------------------------------------------- ))
?((/* Clausulas para obtener la expresi¢n regular equivalente al AFD dado   ))
?((/* en el archivo deltas.log, con n igual al n£mero de estados.           ))
?((/* x1 = n x2= estado inicial, lista y1y2 = estados finales, z = expr. reg))
?((/* --------------------------------------------------------------------- ))

((rn x1 x2 (y1|y2) (z))
    (indice x2 x21)
    (indice y1 y11)
    (rk x1 x21 y11 z1)
    (rn x1 x2 y2 z2)
    (append z1 (+) z3)
    (append z3 z2 z)
)

((rn x y () z)
    (union () () z)
)